1 Введение
	1.1 Введение - Теория
		1.1.1 Организовать совместную работу нескольких разработчиков; Фиксировать версию программы на различных этапах разработки, тем самым создавая историю.; Отслеживать изменения между разными версиями программы.
		1.1.2 Слияния изменений и разрешения конфликтов в файлах исходных кодов.; Организации совместной работы нескольких программистов.
		1.1.3 Только одна копия репозитория
		1.1.4 Коммит
	1.2 Как решать задачи Linux Challenge
		1.2.3 mVQOaZMZmAuCQ9ng1RurSlVT1bBjDgarW5AULZeBNtU
3 Обзор текущего состояния локального репозитория
	3.2 Обзор текущего состояние локального репозитория - Простые задачи
		3.2.1 Вариант C; Вариант D 
		3.2.2 Вариант A
	3.3 Обзор текущего состояние локального репозитория - Сложные задачи
		3.3.1 Вариант C
		3.3.2 Вариант A
		3.3.3 Вариант C
4 Коммит изменений
	4.2 Коммит изменений (индекс) - Простые задачи
		4.2.1 Choice B
		4.2.2 Choice B
	4.3 Коммит изменений (индекс) - Сложные задачи
		4.3.1 Choice A
		4.3.2 Choice A
	4.4 Коммит изменений - Простые задачи
		4.4.1 Вариант B
		4.4.2 A - 3; C - 2; B - 1
	4.5 Коммит изменений - Сложные задачи
		4.5.1 Вариант B; Вариант C
		4.5.2 Вариант A
5 Создание веток
	5.2 Создание веток - Простые задачи
		5.2.1 A; C
		5.2.2 D; C
		5.2.3 A
	5.3 Создание веток - Сложные задачи
		5.3.1 Choice C
6 Переход между коммитами
	6.2 Переход между коммитами - Простые задачи
		6.2.1 Вариант B
	6.3 Переход между коммитами - Сложные задачи
		6.3.1 1
7 git pull и git push
	7.2 git pull и git push - Простые задачи
		7.2.1 Вариант A
		7.2.2 Вариант C
		7.2.3 Вариант B; Вариант C
	7.3 git pull и git push - Сложные задачи
		7.3.1 Изменения успешно загрузятся в локальный репозиторий из удаленного.
		7.3.2 Возникнет конфликт слияния, коммит из удаленного репозитория не будет загружен.
8 git diff
	8.2 git diff - Простые задачи
		8.2.1 Вариант C
		8.2.2 Вариант C
	8.3 git diff - Сложные задачи
		8.3.1 Вариант C
		8.3.2 Вариант B